<!-- views/partials/_navbar.ejs -->
<style>
  body {
    background-color: #e0e0e0 !important;
  }

  .box {
    background-color: #cdd1d7 !important;
    border: 2px solid #8e8e8e !important;
  }

  .navbar-link.is-active,
  .navbar-link:focus,
  .navbar-link:focus-within,
  .navbar-link:hover,
  a.navbar-item.is-active,
  a.navbar-item:focus,
  a.navbar-item:focus-within,
  a.navbar-item:hover {
    color: #5f9bcd !important;
  }

  #delete-account.is-active,
  #delete-account:hover,
  #delete-account:focus,
  #delete-account:focus-within {
    color: rgb(224, 53, 53) !important;
  }

  .navbar-burger:hover {
    background-color: rgb(49, 88, 112);
  }

  .card,
  .select select,
  .input,
  .textarea,
  .table {
    border: 2px solid #80878b !important;
  }

  .table td,
  .table th {
    border: 1px solid #868f96 !important;
  }

  .table {
    border-radius: 0.4em !important;
  }

  .form-step {
    display: none;
  }

  .form-step.active {
    display: block;
  }

  .input:active,
  .input:focus,
  .is-active.input,
  .is-active.textarea,
  .is-focused.input,
  .is-focused.textarea,
  .select select.is-active,
  .select select.is-focused,
  .select select:active,
  .select select:focus,
  .select select::after,
  .select select::before,
  .textarea:active,
  .textarea:focus {
    border-color: #34495e !important;
    box-shadow: 0 0 0 0.125em #34495e33 !important;
  }

  .select:not(.is-multiple):not(.is-loading)::after {
    border-color: #5165ad;
    right: 1.125em;
    z-index: 4;
  }

  .button.is-inverted {
    background-color: #f7f7f7 !important;
    border: 0.15rem solid #34495e !important;
  }

  .navbar-burger {
    color: #ecf0f1 !important;
  }

  @media screen and (width <=768px) {
    .button.main-link-button {
      font-size: 1.5rem !important;
    }

    .columns.is-multiline {
      display: flex;
    }
  }

  @media screen and (width <=630px) {
    .main-link-group {
      gap: 0 !important;
    }

    .button.main-link-button {
      font-size: 1.25rem !important;
    }

    .data-estimate-button {
      font-size: 1rem !important;
    }
  }

  @media screen and (width <=520px) {
    .field.is-grouped.month-year-group {
      flex-direction: column;
    }
  }

  @media screen and (width <=480px) {
    .columns.is-multiline {
      display: block !important;
    }

    .button.main-link-button {
      font-size: 1rem !important;
    }

    .view-expense-button,
    .show-page-button,
    .next-form-button,
    .add-expense-button,
    .back-form-button,
    .add-row-button {
      font-size: 0.9rem !important;
    }

    .data-estimate-button {
      font-size: 0.8rem !important;
    }

    .welcome-page-message {
      font-size: 1.5rem !important;
    }
  }

  @media screen and (width <=400px) {
    .button.main-link-button {
      font-size: 0.9rem !important;
    }

    .main-link-group {
      gap: 0 !important;
    }

    .data-estimate-button {
      font-size: 0.8rem !important;
      width: 63px !important;
    }

    .view-expense-button,
    .show-page-button,
    .next-form-button,
    .add-expense-button,
    .back-form-button,
    .add-row-button {
      font-size: 0.8rem !important;
    }

    .welcome-page-message {
      font-size: 1.25rem !important;
    }
  }

  @media screen and (width <=344px) {
    .button.main-link-button {
      font-size: 0.8rem !important;
    }

    .main-link-group {
      gap: 0 !important;
    }

    .data-estimate-button {
      font-size: 0.7rem !important;
      width: 53px !important;
    }

    .view-expense-button,
    .show-page-button,
    .next-form-button,
    .add-expense-button,
    .back-form-button {
      font-size: 0.8rem !important;
    }

    .add-row-button {
      font-size: 0.7rem !important;
    }
  }

  @media screen and (width > 520px) {
    .welcome-page-message {
      font-size: 1.75rem !important;
    }
  }

  @media screen and (width > 620px) {
    .welcome-page-message {
      font-size: 2rem !important;
    }
  }

  @media screen and (width > 768px) {
    .welcome-page-message {
      font-size: 2.5rem !important;
    }
  }
</style>
<nav class="navbar" role="navigation" aria-label="main navigation">
  <div class="navbar-brand">
    <a href="/budgeo"><img class="navbar-item" style="max-height: 60px" src="/images/logo-with-text-white.png"
        alt="logo in white with text" /></a>

    <a class="navbar-burger burger" aria-label="menu" aria-expanded="false" data-target="nav-bar-menu">
      <span></span>
      <span></span>
      <span></span>
    </a>
  </div>
  <div class="navbar-menu" id="nav-bar-menu">
    <div class="navbar-end">
      <% if(user) { %>
        <a class="navbar-item has-text-weight-bold has-text-white link" href="/budgeo/<%=username%>/data">Financial
          Data</a>
        <a class="navbar-item has-text-weight-bold has-text-white link"
          href="/budgeo/<%=username%>/expenses">Expenses</a>
        <div class="navbar-item has-dropdown is-hoverable">
          <a class="navbar-link has-text-weight-bold">
            <%=username%>
          </a>
          <div class="navbar-dropdown" style="background-color: #34495e !important; border: none;">
            <a class="navbar-item has-text-weight-bold has-text-white" href="/budgeo/auth/sign-out">Sign Out</a>
            <a class="navbar-item has-text-weight-bold has-text-white" id="delete-account"
              onclick="deleteAccountPopUp(this)">Delete Account</a>
          </div>
        </div>

        <% } else if (path==='/sign-up' || path==='/' ) { %>
          <a class="navbar-item has-text-weight-bold has-text-white link" href="/budgeo/auth/sign-in">Sign In</a>
          <% } else { %>
            <a class="navbar-item has-text-weight-bold has-text-white link" href="/budgeo/auth/sign-up">Sign Up</a>
            <% } %>
    </div>
  </div>
</nav>
<Script>
  // function for burger icon to show and hide
  document.addEventListener('DOMContentLoaded', () => {
    const $navbarBurgers =
      Array.prototype.slice.call(document.querySelectorAll('.navbar-burger'), 0);
    $navbarBurgers.forEach(el => {
      el.addEventListener('click', () => {
        const
          target = el.dataset.target; const $target = document.getElementById(target);
        el.classList.toggle('is-active'); $target.classList.toggle('is-active'); const
          navBarLinks = document.querySelectorAll(".navbar-item.link");
        navBarLinks.forEach(el => { el.classList.toggle('has-text-white'); });
      });
    });
  });

  // script for account deletion.. instead of rendering an ejs i just added a popup
  // confirmation with a form submit delete route, got a little creative on this one
  // first defines the new element and gives it the inner html for the popup and buttons
  const newEl = document.createElement('div');
  let allChildNodes;
  newEl.innerHTML = `<div class="container" style="
                        display: flex;
                        flex-direction: column;
                        justify-content: center;
                        align-items: center;
                        ">
                        <img src="/images/logo-surprised.png" alt="surprised logo" style="max-width: 300px; margin-bottom: 1.5rem">
                        <div class="content">
                          <div class="notification is-primary has-text-centered" style="max-width: fit-content; height: 170px;">
                            <p class="title is-5" style="line-height: 1.75">Are you sure you want to delete this account?<br> This action is irreversible.</p>
                            <div class="field is-grouped is-grouped-centered" style="gap: 2rem; margin-top: 1rem;">
                              <form action="/budgeo/accountdeletion?_method=DELETE" method="POST">
                              <button class="button is-danger" type="submit">Delete Account</button>
                              </form>
                              <button class="button" onclick="deleteAccountPopUp(this)">Close</button>
                            </div>
                          </div>
                       </div>
                     </div>`;

  // function to handle popup, gets the .section element and adds the new element as first child
  function deleteAccountPopUp(button) {
    const parentEl = document.querySelector('.section');

    // checks if the button text is Close if so it removes the parentx5 node to get the div
    // that was created on new element to delete it all at once, then unhides the other elements
    // under .section (parent element)
    if (button.textContent === 'Close') {
      button.parentNode.parentNode.parentNode.parentNode.parentNode.remove(); // LOL
      allChildNodes = parentEl.childNodes;
      allChildNodes.forEach(node => {
        node.hidden = false;
      });
      return;
    }
    // checks if .section already has the new element to prevent duping elements
    if (parentEl.contains(newEl)) {
      console.log('delete account already showing');
      return;
    }
    // gets the first child of .section and sets all children to hidden before
    // adding in the new element
    const theFirstChild = parentEl.firstChild;

    allChildNodes = parentEl.childNodes;
    allChildNodes.forEach(node => {
      node.hidden = true;
    });
    parentEl.insertBefore(newEl, theFirstChild);
  }
</Script>